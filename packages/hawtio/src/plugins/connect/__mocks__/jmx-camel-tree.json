{
  "cache": {},
  "domains": {
    "java.util.logging": {
      "type=Logging": {
        "op": {
          "getLoggerLevel": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "java.lang.String",
            "desc": "getLoggerLevel"
          },
          "getParentLoggerName": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "java.lang.String",
            "desc": "getParentLoggerName"
          },
          "setLoggerLevel": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setLoggerLevel"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "LoggerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "LoggerNames"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "jdk.management.jfr": {
      "type=FlightRecorder": {
        "op": {
          "getRecordingOptions": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "getRecordingOptions"
          },
          "takeSnapshot": {
            "args": [],
            "ret": "long",
            "desc": "takeSnapshot"
          },
          "closeRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "closeRecording"
          },
          "newRecording": {
            "args": [],
            "ret": "long",
            "desc": "newRecording"
          },
          "openStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "long",
            "desc": "openStream"
          },
          "setRecordingSettings": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setRecordingSettings"
          },
          "cloneRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "boolean",
                "desc": "p1"
              }
            ],
            "ret": "long",
            "desc": "cloneRecording"
          },
          "setRecordingOptions": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "javax.management.openmbean.TabularData",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setRecordingOptions"
          },
          "copyTo": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "copyTo"
          },
          "startRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "startRecording"
          },
          "closeStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "void",
            "desc": "closeStream"
          },
          "getRecordingSettings": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "getRecordingSettings"
          },
          "setPredefinedConfiguration": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setPredefinedConfiguration"
          },
          "readStream": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "[B",
            "desc": "readStream"
          },
          "setConfiguration": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setConfiguration"
          },
          "stopRecording": {
            "args": [
              {
                "name": "p0",
                "type": "long",
                "desc": "p0"
              }
            ],
            "ret": "boolean",
            "desc": "stopRecording"
          }
        },
        "not": {
          "javax.management.AttributeChangeNotification": {
            "types": ["jmx.attribute.change"],
            "name": "javax.management.AttributeChangeNotification",
            "desc": "Notifies if the RecordingState has changed for one of the recordings, for example if a recording starts or stops"
          }
        },
        "canInvoke": true,
        "attr": {
          "EventTypes": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "EventTypes"
          },
          "Recordings": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "Recordings"
          },
          "Configurations": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "Configurations"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "quartz": {
      "type=QuartzScheduler,name=DefaultQuartzScheduler-SampleCamel,instance=NON_CLUSTERED": {
        "op": {
          "getTriggerState": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "resumeJob": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeTriggersStartingWith": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseJobsAll": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "standby": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "getTriggerNames": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          },
          "pauseAllTriggers": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "deleteCalendar": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseTriggersStartingWith": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeTrigger": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseTriggersEndingWith": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeTriggersContaining": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "deleteJob": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Operation exposed for management"
          },
          "pauseJobsEndingWith": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseJob": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeTriggersEndingWith": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeAllTriggers": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeJobsContaining": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeJobsStartingWith": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "unscheduleJob": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Operation exposed for management"
          },
          "scheduleJob": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.util.Map",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Operation exposed for management"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.util.Map",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Operation exposed for management"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p4",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.util.Date",
              "desc": "Operation exposed for management"
            }
          ],
          "getJobNames": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          },
          "resumeJobGroup": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "triggerJob": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "getTrigger": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "Operation exposed for management"
          },
          "interruptJob": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "boolean",
              "desc": "Operation exposed for management"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "boolean",
              "desc": "Operation exposed for management"
            }
          ],
          "resumeTriggersAll": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "clear": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "addJob": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.util.Map",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Operation exposed for management"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "javax.management.openmbean.CompositeData",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Operation exposed for management"
            }
          ],
          "scheduleBasicJob": {
            "args": [
              {
                "name": "p1",
                "type": "java.util.Map",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "getTriggersOfJob": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          },
          "pauseTriggersContaining": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "getJobDetail": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "Operation exposed for management"
          },
          "pauseJobGroup": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseTriggerGroup": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseTrigger": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseJobsStartingWith": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseTriggersAll": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "pauseJobsContaining": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeJobsAll": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeJobsEndingWith": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resumeTriggerGroup": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "shutdown": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CalendarNames": {
            "rw": false,
            "type": "java.util.List",
            "desc": "Attribute exposed for management"
          },
          "PausedTriggerGroups": {
            "rw": false,
            "type": "java.util.Set",
            "desc": "Attribute exposed for management"
          },
          "AllTriggers": {
            "rw": false,
            "type": "java.util.List",
            "desc": "Attribute exposed for management"
          },
          "ThreadPoolClassName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Attribute exposed for management"
          },
          "Started": {
            "rw": false,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          },
          "JobsCompletedMostRecentSample": {
            "rw": false,
            "type": "long",
            "desc": "Attribute exposed for management"
          },
          "JobsScheduledMostRecentSample": {
            "rw": false,
            "type": "long",
            "desc": "Attribute exposed for management"
          },
          "StandbyMode": {
            "rw": false,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          },
          "JobsExecutedMostRecentSample": {
            "rw": false,
            "type": "long",
            "desc": "Attribute exposed for management"
          },
          "SampledStatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          },
          "PerformanceMetrics": {
            "rw": false,
            "type": "java.util.Map",
            "desc": "Attribute exposed for management"
          },
          "JobStoreClassName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Attribute exposed for management"
          },
          "Shutdown": {
            "rw": false,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          },
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Attribute exposed for management"
          },
          "SchedulerInstanceId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Attribute exposed for management"
          },
          "JobGroupNames": {
            "rw": false,
            "type": "java.util.List",
            "desc": "Attribute exposed for management"
          },
          "CurrentlyExecutingJobs": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "Attribute exposed for management"
          },
          "AllJobDetails": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "Attribute exposed for management"
          },
          "ThreadPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "SchedulerName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Attribute exposed for management"
          },
          "TriggerGroupNames": {
            "rw": false,
            "type": "java.util.List",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "org.xnio": {
      "type=Xnio,provider=\"nio\",worker=\"XNIO-2\"": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "ProviderName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ProviderName"
          },
          "ServerMXBeans": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "ServerMXBeans"
          },
          "WorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "WorkerPoolSize"
          },
          "WorkerQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "WorkerQueueSize"
          },
          "ShutdownRequested": {
            "rw": false,
            "type": "boolean",
            "desc": "ShutdownRequested"
          },
          "IoThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "IoThreadCount"
          },
          "BusyWorkerThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "BusyWorkerThreadCount"
          },
          "CoreWorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "CoreWorkerPoolSize"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "MaxWorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "MaxWorkerPoolSize"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=Xnio,provider=\"nio\",worker=\"XNIO-1\",address=\"/0:0:0:0:0:0:0:0:10000\"": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "ProviderName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ProviderName"
          },
          "ConnectionCount": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionCount"
          },
          "ConnectionLimitLowWater": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionLimitLowWater"
          },
          "BindAddress": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "BindAddress"
          },
          "ConnectionLimitHighWater": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionLimitHighWater"
          },
          "WorkerName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "WorkerName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=Xnio,provider=\"nio\"": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Version"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=Xnio,provider=\"nio\",worker=\"XNIO-1\"": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "ProviderName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ProviderName"
          },
          "ServerMXBeans": {
            "rw": false,
            "type": "[Ljavax.management.ObjectName;",
            "desc": "ServerMXBeans"
          },
          "WorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "WorkerPoolSize"
          },
          "WorkerQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "WorkerQueueSize"
          },
          "ShutdownRequested": {
            "rw": false,
            "type": "boolean",
            "desc": "ShutdownRequested"
          },
          "IoThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "IoThreadCount"
          },
          "BusyWorkerThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "BusyWorkerThreadCount"
          },
          "CoreWorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "CoreWorkerPoolSize"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "MaxWorkerPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "MaxWorkerPoolSize"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=Xnio,provider=\"nio\",worker=\"XNIO-2\",address=\"/0:0:0:0:0:0:0:0:10001\"": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "ProviderName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ProviderName"
          },
          "ConnectionCount": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionCount"
          },
          "ConnectionLimitLowWater": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionLimitLowWater"
          },
          "BindAddress": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "BindAddress"
          },
          "ConnectionLimitHighWater": {
            "rw": false,
            "type": "int",
            "desc": "ConnectionLimitHighWater"
          },
          "WorkerName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "WorkerName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "java.nio": {
      "name=direct,type=BufferPool": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "TotalCapacity": {
            "rw": false,
            "type": "long",
            "desc": "TotalCapacity"
          },
          "MemoryUsed": {
            "rw": false,
            "type": "long",
            "desc": "MemoryUsed"
          },
          "Count": {
            "rw": false,
            "type": "long",
            "desc": "Count"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=mapped,type=BufferPool": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "TotalCapacity": {
            "rw": false,
            "type": "long",
            "desc": "TotalCapacity"
          },
          "MemoryUsed": {
            "rw": false,
            "type": "long",
            "desc": "MemoryUsed"
          },
          "Count": {
            "rw": false,
            "type": "long",
            "desc": "Count"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "jboss.threads": {
      "name=\"XNIO-1\",type=thread-pool": {
        "op": {
          "prestartCoreThread": {
            "args": [],
            "ret": "boolean",
            "desc": "prestartCoreThread"
          },
          "prestartAllCoreThreads": {
            "args": [],
            "ret": "int",
            "desc": "prestartAllCoreThreads"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "GrowthResistanceSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "GrowthResistanceSupported"
          },
          "MaximumPoolSize": {
            "rw": true,
            "type": "int",
            "desc": "MaximumPoolSize"
          },
          "PoolSize": {
            "rw": false,
            "type": "int",
            "desc": "PoolSize"
          },
          "CorePoolSize": {
            "rw": true,
            "type": "int",
            "desc": "CorePoolSize"
          },
          "Terminated": {
            "rw": false,
            "type": "boolean",
            "desc": "Terminated"
          },
          "AllowCoreThreadTimeOut": {
            "rw": true,
            "type": "boolean",
            "desc": "AllowCoreThreadTimeOut"
          },
          "GrowthResistance": {
            "rw": true,
            "type": "float",
            "desc": "GrowthResistance"
          },
          "SubmittedTaskCount": {
            "rw": false,
            "type": "long",
            "desc": "SubmittedTaskCount"
          },
          "CorePoolSizeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CorePoolSizeSupported"
          },
          "Terminating": {
            "rw": false,
            "type": "boolean",
            "desc": "Terminating"
          },
          "QueueSize": {
            "rw": false,
            "type": "int",
            "desc": "QueueSize"
          },
          "KeepAliveTimeSeconds": {
            "rw": true,
            "type": "long",
            "desc": "KeepAliveTimeSeconds"
          },
          "Shutdown": {
            "rw": false,
            "type": "boolean",
            "desc": "Shutdown"
          },
          "CompletedTaskCount": {
            "rw": false,
            "type": "long",
            "desc": "CompletedTaskCount"
          },
          "QueueBounded": {
            "rw": false,
            "type": "boolean",
            "desc": "QueueBounded"
          },
          "LargestPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "LargestPoolSize"
          },
          "CoreThreadPrestartSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CoreThreadPrestartSupported"
          },
          "MaximumQueueSize": {
            "rw": true,
            "type": "int",
            "desc": "MaximumQueueSize"
          },
          "ActiveCount": {
            "rw": false,
            "type": "int",
            "desc": "ActiveCount"
          },
          "LargestQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "LargestQueueSize"
          },
          "RejectedTaskCount": {
            "rw": false,
            "type": "long",
            "desc": "RejectedTaskCount"
          },
          "QueueSizeModifiable": {
            "rw": false,
            "type": "boolean",
            "desc": "QueueSizeModifiable"
          },
          "SpinMissCount": {
            "rw": false,
            "type": "long",
            "desc": "SpinMissCount"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=\"XNIO-2\",type=thread-pool": {
        "op": {
          "prestartCoreThread": {
            "args": [],
            "ret": "boolean",
            "desc": "prestartCoreThread"
          },
          "prestartAllCoreThreads": {
            "args": [],
            "ret": "int",
            "desc": "prestartAllCoreThreads"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "GrowthResistanceSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "GrowthResistanceSupported"
          },
          "MaximumPoolSize": {
            "rw": true,
            "type": "int",
            "desc": "MaximumPoolSize"
          },
          "PoolSize": {
            "rw": false,
            "type": "int",
            "desc": "PoolSize"
          },
          "CorePoolSize": {
            "rw": true,
            "type": "int",
            "desc": "CorePoolSize"
          },
          "Terminated": {
            "rw": false,
            "type": "boolean",
            "desc": "Terminated"
          },
          "AllowCoreThreadTimeOut": {
            "rw": true,
            "type": "boolean",
            "desc": "AllowCoreThreadTimeOut"
          },
          "GrowthResistance": {
            "rw": true,
            "type": "float",
            "desc": "GrowthResistance"
          },
          "SubmittedTaskCount": {
            "rw": false,
            "type": "long",
            "desc": "SubmittedTaskCount"
          },
          "CorePoolSizeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CorePoolSizeSupported"
          },
          "Terminating": {
            "rw": false,
            "type": "boolean",
            "desc": "Terminating"
          },
          "QueueSize": {
            "rw": false,
            "type": "int",
            "desc": "QueueSize"
          },
          "KeepAliveTimeSeconds": {
            "rw": true,
            "type": "long",
            "desc": "KeepAliveTimeSeconds"
          },
          "Shutdown": {
            "rw": false,
            "type": "boolean",
            "desc": "Shutdown"
          },
          "CompletedTaskCount": {
            "rw": false,
            "type": "long",
            "desc": "CompletedTaskCount"
          },
          "QueueBounded": {
            "rw": false,
            "type": "boolean",
            "desc": "QueueBounded"
          },
          "LargestPoolSize": {
            "rw": false,
            "type": "int",
            "desc": "LargestPoolSize"
          },
          "CoreThreadPrestartSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CoreThreadPrestartSupported"
          },
          "MaximumQueueSize": {
            "rw": true,
            "type": "int",
            "desc": "MaximumQueueSize"
          },
          "ActiveCount": {
            "rw": false,
            "type": "int",
            "desc": "ActiveCount"
          },
          "LargestQueueSize": {
            "rw": false,
            "type": "int",
            "desc": "LargestQueueSize"
          },
          "RejectedTaskCount": {
            "rw": false,
            "type": "long",
            "desc": "RejectedTaskCount"
          },
          "QueueSizeModifiable": {
            "rw": false,
            "type": "boolean",
            "desc": "QueueSizeModifiable"
          },
          "SpinMissCount": {
            "rw": false,
            "type": "long",
            "desc": "SpinMissCount"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "JMImplementation": {
      "type=MBeanServerDelegate": {
        "op": {},
        "not": {
          "javax.management.MBeanServerNotification": {
            "types": ["JMX.mbean.unregistered", "JMX.mbean.registered"],
            "name": "javax.management.MBeanServerNotification",
            "desc": "Notifications sent by the MBeanServerDelegate MBean"
          }
        },
        "canInvoke": true,
        "attr": {
          "ImplementationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The JMX implementation name (the name of this product)"
          },
          "MBeanServerId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The MBean server agent identification"
          },
          "ImplementationVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The JMX implementation version (the version of this product)."
          },
          "SpecificationVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The version of the JMX specification implemented by this product."
          },
          "SpecificationVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The vendor of the JMX specification implemented by this product."
          },
          "SpecificationName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The full name of the JMX specification implemented by this product."
          },
          "ImplementationVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "the JMX implementation vendor (the vendor of this product)."
          }
        },
        "desc": "Represents  the MBean server from the management point of view."
      }
    },
    "org.springframework.boot": {
      "type=Endpoint,name=Scheduledtasks": {
        "op": {
          "scheduledTasks": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke scheduledTasks for endpoint scheduledtasks"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint scheduledtasks"
      },
      "type=Endpoint,name=Loggers": {
        "op": {
          "configureLogLevel": {
            "args": [
              {
                "name": "name",
                "type": "java.lang.String",
                "desc": null
              },
              {
                "name": "configuredLevel",
                "type": "java.lang.String",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke configureLogLevel for endpoint loggers"
          },
          "loggers": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke loggers for endpoint loggers"
          },
          "loggerLevels": {
            "args": [
              {
                "name": "name",
                "type": "java.lang.String",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke loggerLevels for endpoint loggers"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint loggers"
      },
      "type=Endpoint,name=Mappings": {
        "op": {
          "mappings": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke mappings for endpoint mappings"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint mappings"
      },
      "type=Endpoint,name=Info": {
        "op": {
          "info": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke info for endpoint info"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint info"
      },
      "type=Endpoint,name=Camelroutes": {
        "op": {
          "readRoutes": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Invoke readRoutes for endpoint camelroutes"
          },
          "doWriteAction": {
            "args": [
              {
                "name": "id",
                "type": "java.lang.String",
                "desc": null
              },
              {
                "name": "action",
                "type": "java.lang.String",
                "desc": null
              },
              {
                "name": "timeInfo",
                "type": "java.lang.Object",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke doWriteAction for endpoint camelroutes"
          },
          "doReadAction": {
            "args": [
              {
                "name": "id",
                "type": "java.lang.String",
                "desc": null
              },
              {
                "name": "action",
                "type": "java.lang.String",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke doReadAction for endpoint camelroutes"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint camelroutes"
      },
      "type=Endpoint,name=Env": {
        "op": {
          "environment": {
            "args": [
              {
                "name": "pattern",
                "type": "java.lang.String",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke environment for endpoint env"
          },
          "environmentEntry": {
            "args": [
              {
                "name": "toMatch",
                "type": "java.lang.String",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke environmentEntry for endpoint env"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint env"
      },
      "type=Endpoint,name=Caches": {
        "op": {
          "clearCaches": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke clearCaches for endpoint caches"
          },
          "cache": {
            "args": [
              {
                "name": "cache",
                "type": "java.lang.String",
                "desc": null
              },
              {
                "name": "cacheManager",
                "type": "java.lang.String",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke cache for endpoint caches"
          },
          "caches": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke caches for endpoint caches"
          },
          "clearCache": {
            "args": [
              {
                "name": "cache",
                "type": "java.lang.String",
                "desc": null
              },
              {
                "name": "cacheManager",
                "type": "java.lang.String",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke clearCache for endpoint caches"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint caches"
      },
      "type=Endpoint,name=Beans": {
        "op": {
          "beans": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke beans for endpoint beans"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint beans"
      },
      "type=Endpoint,name=Httptrace": {
        "op": {
          "traces": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke traces for endpoint httptrace"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint httptrace"
      },
      "type=Endpoint,name=Threaddump": {
        "op": {
          "threadDump": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke threadDump for endpoint threaddump"
          },
          "textThreadDump": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Invoke textThreadDump for endpoint threaddump"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint threaddump"
      },
      "type=Endpoint,name=Metrics": {
        "op": {
          "metric": {
            "args": [
              {
                "name": "requiredMetricName",
                "type": "java.lang.String",
                "desc": null
              },
              {
                "name": "tag",
                "type": "java.util.List",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke metric for endpoint metrics"
          },
          "listNames": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke listNames for endpoint metrics"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint metrics"
      },
      "type=Endpoint,name=Configprops": {
        "op": {
          "configurationPropertiesWithPrefix": {
            "args": [
              {
                "name": "prefix",
                "type": "java.lang.String",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke configurationPropertiesWithPrefix for endpoint configprops"
          },
          "configurationProperties": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke configurationProperties for endpoint configprops"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint configprops"
      },
      "type=Endpoint,name=Camelroutecontroller": {
        "op": {
          "getControlledRoutes": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Invoke getControlledRoutes for endpoint camelroutecontroller"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint camelroutecontroller"
      },
      "type=Endpoint,name=Conditions": {
        "op": {
          "applicationConditionEvaluation": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke applicationConditionEvaluation for endpoint conditions"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint conditions"
      },
      "type=Endpoint,name=Health": {
        "op": {
          "health": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Invoke health for endpoint health"
          },
          "healthForPath": {
            "args": [
              {
                "name": "path",
                "type": "java.lang.Object",
                "desc": null
              }
            ],
            "ret": "java.util.Map",
            "desc": "Invoke healthForPath for endpoint health"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "MBean operations for endpoint health"
      }
    },
    "java.lang": {
      "name=G1 Survivor Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=Threading": {
        "op": {
          "getThreadCpuTime": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadCpuTime"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadCpuTime"
            }
          ],
          "getThreadInfo": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": "p2"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": "p2"
                },
                {
                  "name": "p3",
                  "type": "int",
                  "desc": "p3"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "int",
                  "desc": "p1"
                }
              ],
              "ret": "javax.management.openmbean.CompositeData",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "javax.management.openmbean.CompositeData",
              "desc": "getThreadInfo"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "int",
                  "desc": "p1"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "getThreadInfo"
            }
          ],
          "findDeadlockedThreads": {
            "args": [],
            "ret": "[J",
            "desc": "findDeadlockedThreads"
          },
          "getThreadAllocatedBytes": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadAllocatedBytes"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadAllocatedBytes"
            }
          ],
          "getThreadUserTime": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "[J",
                  "desc": "p0"
                }
              ],
              "ret": "[J",
              "desc": "getThreadUserTime"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "long",
                  "desc": "p0"
                }
              ],
              "ret": "long",
              "desc": "getThreadUserTime"
            }
          ],
          "findMonitorDeadlockedThreads": {
            "args": [],
            "ret": "[J",
            "desc": "findMonitorDeadlockedThreads"
          },
          "resetPeakThreadCount": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakThreadCount"
          },
          "dumpAllThreads": [
            {
              "args": [
                {
                  "name": "p0",
                  "type": "boolean",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                },
                {
                  "name": "p2",
                  "type": "int",
                  "desc": "p2"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "dumpAllThreads"
            },
            {
              "args": [
                {
                  "name": "p0",
                  "type": "boolean",
                  "desc": "p0"
                },
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": "p1"
                }
              ],
              "ret": "[Ljavax.management.openmbean.CompositeData;",
              "desc": "dumpAllThreads"
            }
          ]
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "ThreadAllocatedMemorySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadAllocatedMemorySupported"
          },
          "ThreadContentionMonitoringEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadContentionMonitoringEnabled"
          },
          "CurrentThreadAllocatedBytes": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadAllocatedBytes"
          },
          "TotalStartedThreadCount": {
            "rw": false,
            "type": "long",
            "desc": "TotalStartedThreadCount"
          },
          "CurrentThreadCpuTimeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CurrentThreadCpuTimeSupported"
          },
          "CurrentThreadUserTime": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadUserTime"
          },
          "PeakThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "PeakThreadCount"
          },
          "AllThreadIds": {
            "rw": false,
            "type": "[J",
            "desc": "AllThreadIds"
          },
          "ThreadAllocatedMemoryEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadAllocatedMemoryEnabled"
          },
          "CurrentThreadCpuTime": {
            "rw": false,
            "type": "long",
            "desc": "CurrentThreadCpuTime"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "ThreadContentionMonitoringSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadContentionMonitoringSupported"
          },
          "ThreadCpuTimeSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ThreadCpuTimeSupported"
          },
          "ThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "ThreadCount"
          },
          "ThreadCpuTimeEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "ThreadCpuTimeEnabled"
          },
          "ObjectMonitorUsageSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "ObjectMonitorUsageSupported"
          },
          "SynchronizerUsageSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "SynchronizerUsageSupported"
          },
          "DaemonThreadCount": {
            "rw": false,
            "type": "int",
            "desc": "DaemonThreadCount"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=Memory": {
        "op": {
          "gc": {
            "args": [],
            "ret": "void",
            "desc": "gc"
          }
        },
        "not": {
          "javax.management.Notification": {
            "types": [
              "java.management.memory.threshold.exceeded",
              "java.management.memory.collection.threshold.exceeded"
            ],
            "name": "javax.management.Notification",
            "desc": "Memory Notification"
          }
        },
        "canInvoke": true,
        "attr": {
          "ObjectPendingFinalizationCount": {
            "rw": false,
            "type": "int",
            "desc": "ObjectPendingFinalizationCount"
          },
          "Verbose": {
            "rw": true,
            "type": "boolean",
            "desc": "Verbose"
          },
          "HeapMemoryUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "HeapMemoryUsage"
          },
          "NonHeapMemoryUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "NonHeapMemoryUsage"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=Metaspace,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Eden Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=OperatingSystem": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "OpenFileDescriptorCount": {
            "rw": false,
            "type": "long",
            "desc": "OpenFileDescriptorCount"
          },
          "CommittedVirtualMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "CommittedVirtualMemorySize"
          },
          "FreePhysicalMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "FreePhysicalMemorySize"
          },
          "SystemLoadAverage": {
            "rw": false,
            "type": "double",
            "desc": "SystemLoadAverage"
          },
          "Arch": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Arch"
          },
          "ProcessCpuLoad": {
            "rw": false,
            "type": "double",
            "desc": "ProcessCpuLoad"
          },
          "FreeSwapSpaceSize": {
            "rw": false,
            "type": "long",
            "desc": "FreeSwapSpaceSize"
          },
          "TotalPhysicalMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "TotalPhysicalMemorySize"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "TotalSwapSpaceSize": {
            "rw": false,
            "type": "long",
            "desc": "TotalSwapSpaceSize"
          },
          "ProcessCpuTime": {
            "rw": false,
            "type": "long",
            "desc": "ProcessCpuTime"
          },
          "MaxFileDescriptorCount": {
            "rw": false,
            "type": "long",
            "desc": "MaxFileDescriptorCount"
          },
          "SystemCpuLoad": {
            "rw": false,
            "type": "double",
            "desc": "SystemCpuLoad"
          },
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Version"
          },
          "AvailableProcessors": {
            "rw": false,
            "type": "int",
            "desc": "AvailableProcessors"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeCacheManager,type=MemoryManager": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeHeap 'non-nmethods',type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Old Gen,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=Compressed Class Space,type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=CodeHeap 'non-profiled nmethods',type=MemoryPool": {
        "op": {
          "resetPeakUsage": {
            "args": [],
            "ret": "void",
            "desc": "resetPeakUsage"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Usage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "Usage"
          },
          "UsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "UsageThresholdCount"
          },
          "MemoryManagerNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryManagerNames"
          },
          "UsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdSupported"
          },
          "UsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "UsageThreshold"
          },
          "CollectionUsageThresholdCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionUsageThresholdCount"
          },
          "PeakUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "PeakUsage"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "UsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "UsageThresholdExceeded"
          },
          "CollectionUsageThreshold": {
            "rw": true,
            "type": "long",
            "desc": "CollectionUsageThreshold"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "Type": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Type"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionUsageThresholdSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdSupported"
          },
          "CollectionUsage": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "CollectionUsage"
          },
          "CollectionUsageThresholdExceeded": {
            "rw": false,
            "type": "boolean",
            "desc": "CollectionUsageThresholdExceeded"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Old Generation,type=GarbageCollector": {
        "op": {},
        "not": {
          "javax.management.Notification": {
            "types": ["com.sun.management.gc.notification"],
            "name": "javax.management.Notification",
            "desc": "GC Notification"
          }
        },
        "canInvoke": true,
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "LastGcInfo": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "LastGcInfo"
          },
          "CollectionTime": {
            "rw": false,
            "type": "long",
            "desc": "CollectionTime"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionCount"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=ClassLoading": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "LoadedClassCount": {
            "rw": false,
            "type": "int",
            "desc": "LoadedClassCount"
          },
          "UnloadedClassCount": {
            "rw": false,
            "type": "long",
            "desc": "UnloadedClassCount"
          },
          "Verbose": {
            "rw": true,
            "type": "boolean",
            "desc": "Verbose"
          },
          "TotalLoadedClassCount": {
            "rw": false,
            "type": "long",
            "desc": "TotalLoadedClassCount"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=Compilation": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "CompilationTimeMonitoringSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "CompilationTimeMonitoringSupported"
          },
          "TotalCompilationTime": {
            "rw": false,
            "type": "long",
            "desc": "TotalCompilationTime"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=G1 Young Generation,type=GarbageCollector": {
        "op": {},
        "not": {
          "javax.management.Notification": {
            "types": ["com.sun.management.gc.notification"],
            "name": "javax.management.Notification",
            "desc": "GC Notification"
          }
        },
        "canInvoke": true,
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "LastGcInfo": {
            "rw": false,
            "type": "javax.management.openmbean.CompositeData",
            "desc": "LastGcInfo"
          },
          "CollectionTime": {
            "rw": false,
            "type": "long",
            "desc": "CollectionTime"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "CollectionCount": {
            "rw": false,
            "type": "long",
            "desc": "CollectionCount"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "name=Metaspace Manager,type=MemoryManager": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "MemoryPoolNames": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "MemoryPoolNames"
          },
          "Valid": {
            "rw": false,
            "type": "boolean",
            "desc": "Valid"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=Runtime": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "SpecVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecVendor"
          },
          "ClassPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ClassPath"
          },
          "InputArguments": {
            "rw": false,
            "type": "[Ljava.lang.String;",
            "desc": "InputArguments"
          },
          "Uptime": {
            "rw": false,
            "type": "long",
            "desc": "Uptime"
          },
          "VmName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmName"
          },
          "StartTime": {
            "rw": false,
            "type": "long",
            "desc": "StartTime"
          },
          "VmVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmVersion"
          },
          "Pid": {
            "rw": false,
            "type": "long",
            "desc": "Pid"
          },
          "SpecName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecName"
          },
          "ManagementSpecVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ManagementSpecVersion"
          },
          "Name": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Name"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          },
          "VmVendor": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "VmVendor"
          },
          "LibraryPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "LibraryPath"
          },
          "BootClassPath": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "BootClassPath"
          },
          "SpecVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "SpecVersion"
          },
          "SystemProperties": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "SystemProperties"
          },
          "BootClassPathSupported": {
            "rw": false,
            "type": "boolean",
            "desc": "BootClassPathSupported"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "com.sun.management": {
      "type=HotSpotDiagnostic": {
        "op": {
          "setVMOption": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "setVMOption"
          },
          "getVMOption": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              }
            ],
            "ret": "javax.management.openmbean.CompositeData",
            "desc": "getVMOption"
          },
          "dumpHeap": {
            "args": [
              {
                "name": "p0",
                "type": "java.lang.String",
                "desc": "p0"
              },
              {
                "name": "p1",
                "type": "boolean",
                "desc": "p1"
              }
            ],
            "ret": "void",
            "desc": "dumpHeap"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "DiagnosticOptions": {
            "rw": false,
            "type": "[Ljavax.management.openmbean.CompositeData;",
            "desc": "DiagnosticOptions"
          },
          "ObjectName": {
            "rw": false,
            "type": "javax.management.ObjectName",
            "desc": "ObjectName"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=DiagnosticCommand": {
        "op": {
          "vmUptime": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print VM uptime."
          },
          "jfrDump": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Copies contents of a JFR recording to file. Either the name or the recording id must be specified."
          },
          "jfrStart": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Starts a new JFR recording"
          },
          "gcClassStats": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Provide statistics about Java class meta data."
          },
          "threadPrint": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print all threads with stacktraces."
          },
          "jfrStop": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Stops a JFR recording"
          },
          "compilerCodelist": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all compiled methods in code cache that are alive"
          },
          "jfrCheck": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Checks running JFR recording(s)"
          },
          "vmSymboltable": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dump symbol table."
          },
          "gcRun": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Call java.lang.System.gc()."
          },
          "vmClassloaders": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints classloader hierarchy."
          },
          "vmMetaspace": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints the statistics for the metaspace"
          },
          "compilerDirectivesPrint": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all active compiler directives."
          },
          "vmSetFlag": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Sets VM flag option using the provided value."
          },
          "compilerDirectivesAdd": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Add compiler directives from file."
          },
          "vmDynlibs": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print loaded dynamic libraries."
          },
          "vmPrintTouchedMethods": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print all methods that have ever been touched during the lifetime of this JVM."
          },
          "compilerCodecache": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print code cache layout and bounds."
          },
          "vmNativeMemory": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print native memory usage"
          },
          "gcClassHistogram": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Provide statistics about the Java heap usage."
          },
          "gcRunFinalization": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Call java.lang.System.runFinalization()."
          },
          "jvmtiDataDump": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Signal the JVM to do a data-dump request for JVMTI."
          },
          "gcFinalizerInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Provide information about Java finalization queue."
          },
          "vmStringtable": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dump string table."
          },
          "help": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "For more information about a specific command use 'help <command>'. With no argument this will show a list of available commands. 'help all' will show help for all commands."
          },
          "jfrConfigure": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Configure JFR"
          },
          "vmSystemProperties": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print system properties."
          },
          "compilerDirectivesClear": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Remove all compiler directives."
          },
          "vmSystemdictionary": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Prints the statistics for dictionary hashtable sizes and bucket length"
          },
          "vmClassloaderStats": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print statistics about all ClassLoaders."
          },
          "compilerDirectivesRemove": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Remove latest added compiler directive."
          },
          "gcHeapInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Provide generic Java heap information."
          },
          "compilerCodeHeapAnalytics": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print CodeHeap analytics"
          },
          "vmVersion": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print JVM version information."
          },
          "vmInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print information about JVM environment and status."
          },
          "compilerQueue": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print methods queued for compilation."
          },
          "vmFlags": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print VM flag options and their current values."
          },
          "vmLog": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Lists current log configuration, enables/disables/configures a log output, or rotates all logs."
          },
          "jvmtiAgentLoad": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Load JVMTI native agent."
          },
          "vmClassHierarchy": {
            "args": [
              {
                "name": "arguments",
                "type": "[Ljava.lang.String;",
                "desc": "Array of Diagnostic Commands Arguments and Options"
              }
            ],
            "ret": "java.lang.String",
            "desc": "Print a list of all loaded classes, indented to show the class hiearchy. The name of each class is followed by the ClassLoaderData* of its ClassLoader, or \"null\" if loaded by the bootstrap class loader."
          },
          "vmCommandLine": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Print the command line used to start this VM instance."
          }
        },
        "not": {
          "javax.management.Notification": {
            "types": ["jmx.mbean.info.changed"],
            "name": "javax.management.Notification",
            "desc": "Diagnostic Framework Notification"
          }
        },
        "canInvoke": true,
        "attr": {},
        "desc": "Diagnostic Commands"
      }
    },
    "org.apache.camel": {
      "context=SampleCamel,type=tracer,name=BacklogDebugger": {
        "op": {
          "getSuspendedBreakpointNodeIds": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "Return the node ids which is currently suspended"
          },
          "getDebugCounter": {
            "args": [],
            "ret": "long",
            "desc": "DebugCounter"
          },
          "setMessageBodyOnBreakpoint": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.Object",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates the message body (with a new type) on the suspended breakpoint at the given node id"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.Object",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates the message body (uses same type as old body) on the suspended breakpoint at the given node id"
            }
          ],
          "resetDebugCounter": {
            "args": [],
            "ret": "void",
            "desc": "Resets the debug counter"
          },
          "removeBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Remote the breakpoint from the given node id (will resume suspend breakpoint first)"
          },
          "evaluateExpressionAtBreakpoint": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p4",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.Object",
              "desc": "Evaluates the expression at a given breakpoint node id"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Evaluates the expression at a given breakpoint node id and returns the result as String"
            }
          ],
          "getFallbackTimeout": {
            "args": [],
            "ret": "long",
            "desc": "FallbackTimeout"
          },
          "setExchangePropertyOnBreakpoint": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.Object",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates/adds the exchange property (uses same type as old exchange property  value) on the suspended breakpoint at the given node id"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.Object",
                  "desc": ""
                },
                {
                  "name": "p4",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates/adds the exchange property (with a new type) on the suspended breakpoint at the given node id"
            }
          ],
          "stepBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Starts single step debugging from the suspended breakpoint at the given node id"
          },
          "validateConditionalBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Used for validating if a given breakpoint condition (predicate) is valid or not"
          },
          "disableDebugger": {
            "args": [],
            "ret": "void",
            "desc": "Disable the debugger"
          },
          "setBodyIncludeStreams": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyIncludeStreams"
          },
          "setMessageHeaderOnBreakpoint": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.Object",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates/adds the message header (uses same type as old header value) on the suspended breakpoint at the given node id"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "java.lang.Object",
                  "desc": ""
                },
                {
                  "name": "p4",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Updates/adds the message header (with a new type) on the suspended breakpoint at the given node id"
            }
          ],
          "setBodyMaxChars": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyMaxChars"
          },
          "getBodyMaxChars": {
            "args": [],
            "ret": "int",
            "desc": "BodyMaxChars"
          },
          "getLoggingLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LoggingLevel"
          },
          "messageHistoryOnBreakpointAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Returns the message history at the given node id as XML"
          },
          "suspendedBreakpointNodeIds": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "Return the node ids which is currently suspended"
          },
          "attach": {
            "args": [],
            "ret": "void",
            "desc": "Attach the debugger"
          },
          "breakpoints": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "Return the node ids which has breakpoints"
          },
          "removeMessageHeaderOnBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Removes the message header on the suspended breakpoint at the given node id"
          },
          "isSingleStepMode": {
            "args": [],
            "ret": "boolean",
            "desc": "SingleStepMode"
          },
          "setFallbackTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "FallbackTimeout"
          },
          "isBodyIncludeFiles": {
            "args": [],
            "ret": "boolean",
            "desc": "BodyIncludeFiles"
          },
          "enableDebugger": {
            "args": [],
            "ret": "void",
            "desc": "Enable the debugger"
          },
          "addBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Add a breakpoint at the given node id"
          },
          "removeAllBreakpoints": {
            "args": [],
            "ret": "void",
            "desc": "Remote all breakpoints (will resume all suspend breakpoints first and exists single step mode)"
          },
          "setBodyIncludeFiles": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BodyIncludeFiles"
          },
          "resumeAll": {
            "args": [],
            "ret": "void",
            "desc": "Resume running any suspended breakpoints, and exits step mode"
          },
          "addConditionalBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Add a conditional breakpoint at the given node id"
          },
          "dumpTracedMessagesAsXml": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the messages in xml format from the suspended breakpoint at the given node, optionally including the exchange properties"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the messages in xml format from the suspended breakpoint at the given node"
            }
          ],
          "resumeBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Resume running from the suspended breakpoint at the given node id"
          },
          "removeMessageBodyOnBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Removes the message body on the suspended breakpoint at the given node id"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "removeExchangePropertyOnBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Removes the exchange property on the suspended breakpoint at the given node id"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isBodyIncludeStreams": {
            "args": [],
            "ret": "boolean",
            "desc": "BodyIncludeStreams"
          },
          "setLoggingLevel": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "LoggingLevel"
          },
          "enableBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Enables a breakpoint which has been disabled"
          },
          "isEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "Enabled"
          },
          "disableBreakpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Disables a breakpoint"
          },
          "detach": {
            "args": [],
            "ret": "void",
            "desc": "Detach the debugger"
          },
          "step": {
            "args": [],
            "ret": "void",
            "desc": "Steps to next node in step mode"
          },
          "getBreakpoints": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "Return the node ids which has breakpoints"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SingleStepMode": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether currently in step mode"
          },
          "BodyIncludeStreams": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to include stream based message body in the trace message"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "FallbackTimeout": {
            "rw": true,
            "type": "long",
            "desc": "Fallback Timeout in seconds when block the message processing in Camel"
          },
          "LoggingLevel": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Logging Level"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "BodyMaxChars": {
            "rw": true,
            "type": "int",
            "desc": "Number of maximum chars in the message body in the trace message. Use zero or negative value to have unlimited size."
          },
          "Enabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Is debugger enabled"
          },
          "BodyIncludeFiles": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to include file based message body in the trace message."
          },
          "DebugCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of total debugged messages"
          }
        },
        "desc": "Managed BacklogDebugger"
      },
      "context=SampleCamel,type=context,name=\"SampleCamel\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "dumpStepStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the CamelContext and routes and steps stats as XML"
          },
          "getCamelVersion": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelVersion"
          },
          "dumpRestsAsXml": [
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Dumps the rests as XML"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the rests as XML"
            }
          ],
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "getClassResolver": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ClassResolver"
          },
          "isLogMask": {
            "args": [],
            "ret": "boolean",
            "desc": "LogMask"
          },
          "isUseMDCLogging": {
            "args": [],
            "ret": "boolean",
            "desc": "UseMDCLogging"
          },
          "requestBodyAndHeaders": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Object",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "java.lang.Object",
            "desc": "Request body and headers (in out)"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "isShutdownNowOnTimeout": {
            "args": [],
            "ret": "boolean",
            "desc": "ShutdownNowOnTimeout"
          },
          "isUseBreadcrumb": {
            "args": [],
            "ret": "boolean",
            "desc": "UseBreadcrumb"
          },
          "sendBodyAndHeaders": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Object",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Send body and headers (in only)"
          },
          "sendBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Object",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Send body (in only)"
          },
          "dumpRoutesAsXml": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the routes as XML"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the routes as XML"
            },
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Dumps the routes as XML"
            }
          ],
          "setTracing": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Tracing"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Camel"
          },
          "canSendToEndpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Whether its possible to send to the endpoint (eg the endpoint has a producer)"
          },
          "getTracing": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "setShutdownNowOnTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "ShutdownNowOnTimeout"
          },
          "removeEndpoints": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Removes endpoints by the given pattern"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "languageNames": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "The names of the languages currently registered"
          },
          "startAllRoutes": {
            "args": [],
            "ret": "void",
            "desc": "Starts all the routes which currently is not started"
          },
          "setGlobalOption": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Sets the value of a Camel global option"
          },
          "getLoad15": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load15"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "setTimeUnit": {
            "args": [
              {
                "name": "p1",
                "type": "java.util.concurrent.TimeUnit",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "TimeUnit"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Camel (shutdown)"
          },
          "getGlobalOptions": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "GlobalOptions"
          },
          "reset": [
            {
              "args": [],
              "ret": "void",
              "desc": "Reset counters"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Reset counters"
            }
          ],
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getUptime": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Uptime"
          },
          "getManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ManagementName"
          },
          "getHeadersMapFactoryClassName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "HeadersMapFactoryClassName"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "dataFormatNames": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "The names of the data formats currently registered"
          },
          "dumpRoutesStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the CamelContext and routes stats as XML"
          },
          "dumpRoutesCoverageAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the routes coverage as XML"
          },
          "requestStringBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.Object",
            "desc": "Request body (String type) (in out)"
          },
          "getLoad05": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load05"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "isUseDataType": {
            "args": [],
            "ret": "boolean",
            "desc": "UseDataType"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "requestBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Object",
                "desc": ""
              }
            ],
            "ret": "java.lang.Object",
            "desc": "Request body (in out)"
          },
          "isMessageHistory": {
            "args": [],
            "ret": "boolean",
            "desc": "MessageHistory"
          },
          "getPackageScanClassResolver": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "PackageScanClassResolver"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "getTimeout": {
            "args": [],
            "ret": "long",
            "desc": "Timeout"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "isAllowUseOriginalMessage": {
            "args": [],
            "ret": "boolean",
            "desc": "AllowUseOriginalMessage"
          },
          "getUptimeMillis": {
            "args": [],
            "ret": "long",
            "desc": "UptimeMillis"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Camel"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getApplicationContextClassName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ApplicationContextClassName"
          },
          "restart": {
            "args": [],
            "ret": "void",
            "desc": "Restart Camel (stop and then start)"
          },
          "dumpRouteTemplatesAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the route templates as XML"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Camel"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getStartedRoutes": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "StartedRoutes"
          },
          "getTimeUnit": {
            "args": [],
            "ret": "java.util.concurrent.TimeUnit",
            "desc": "TimeUnit"
          },
          "getLoad01": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load01"
          },
          "setTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Timeout"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "createEndpoint": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Creates the endpoint by the given URI"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "getManagementStatisticsLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ManagementStatisticsLevel"
          },
          "getGlobalOption": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Gets the value of a Camel global option"
          },
          "dumpRoutesSourceLocationsAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps all routes with mappings between node ids and their source location/line-number (currently only XML and YAML routes supported) as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getTotalRoutes": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "TotalRoutes"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "componentNames": {
            "args": [],
            "ret": "java.util.Set",
            "desc": "The names of the components currently registered"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          },
          "sendStringBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Send body (String type) (in only)"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "UseMDCLogging": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether MDC logging is supported"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "TotalRoutes": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Total number of routes"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "UseBreadcrumb": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether breadcrumbs is in use"
          },
          "UptimeMillis": {
            "rw": false,
            "type": "long",
            "desc": "Uptime [milliseconds]"
          },
          "TimeUnit": {
            "rw": true,
            "type": "java.util.concurrent.TimeUnit",
            "desc": "Shutdown timeout time unit"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "LogMask": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether security mask for Logging is enabled"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "Timeout": {
            "rw": true,
            "type": "long",
            "desc": "Shutdown timeout"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "AllowUseOriginalMessage": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether allowing access to the original message during routing"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "MessageHistory": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether message history is enabled"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel State"
          },
          "Tracing": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "HeadersMapFactoryClassName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "HeadersMapFactory class name"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "Load15": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last fifteen minutes"
          },
          "ApplicationContextClassName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ApplicationContext class name"
          },
          "StartedRoutes": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Current number of started routes"
          },
          "ManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "ClassResolver": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "ClassResolver class name"
          },
          "GlobalOptions": {
            "rw": false,
            "type": "java.util.Map",
            "desc": "Camel Global Options"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "UseDataType": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether Message DataType is enabled"
          },
          "Uptime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Uptime [human readable text]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "ShutdownNowOnTimeout": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to force shutdown now when a timeout occurred"
          },
          "Load05": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last five minutes"
          },
          "PackageScanClassResolver": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "PackageScanClassResolver class name"
          },
          "CamelVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel Version"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "ManagementStatisticsLevel": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel Management StatisticsLevel"
          },
          "Load01": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last minute"
          }
        },
        "desc": "Managed CamelContext"
      },
      "context=SampleCamel,type=endpoints,name=\"mock://result\"": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "browseMessageAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Integer",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Get message as XML from queue by index"
          },
          "browseAllMessagesAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Gets all the messages as XML from the queue"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "queueSize": {
            "args": [],
            "ret": "long",
            "desc": "Current number of Exchanges in Queue"
          },
          "getEndpointBaseUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointBaseUri"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "browseExchange": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Integer",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Get Exchange from queue by index"
          },
          "browseRangeMessagesAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Integer",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.Integer",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Gets the range of messages as XML from the queue"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "browseMessageBody": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Integer",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Get message body from queue by index"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointBaseUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint Base URI (no query parameters)"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          }
        },
        "desc": "Managed BrowsableEndpoint"
      },
      "context=SampleCamel,type=components,name=\"quartz\"": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getComponentName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ComponentName"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isVerifySupported": {
            "args": [],
            "ret": "boolean",
            "desc": "VerifySupported"
          },
          "verify": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
            "desc": "Verify options against a given scope"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "VerifySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this component support verification (parameters or connectivity)"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ComponentName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component Name"
          }
        },
        "desc": "Managed Component"
      },
      "context=SampleCamel,type=components,name=\"mock\"": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getComponentName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ComponentName"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isVerifySupported": {
            "args": [],
            "ret": "boolean",
            "desc": "VerifySupported"
          },
          "verify": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
            "desc": "Verify options against a given scope"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "VerifySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this component support verification (parameters or connectivity)"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ComponentName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component Name"
          }
        },
        "desc": "Managed Component"
      },
      "context=SampleCamel,type=components,name=\"stream\"": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getComponentName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ComponentName"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isVerifySupported": {
            "args": [],
            "ret": "boolean",
            "desc": "VerifySupported"
          },
          "verify": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
            "desc": "Verify options against a given scope"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "VerifySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this component support verification (parameters or connectivity)"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ComponentName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component Name"
          }
        },
        "desc": "Managed Component"
      },
      "context=SampleCamel,type=processors,name=\"setBody1\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getIndex": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Index"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getSourceLocation": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocation"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "getSourceLineNumber": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "SourceLineNumber"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getStepId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "StepId"
          },
          "getSupportExtendedInformation": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "SupportExtendedInformation"
          },
          "getProcessorId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ProcessorId"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Processor"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getExpression": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Expression"
          },
          "getExpressionLanguage": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ExpressionLanguage"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Processor"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "reset": {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          "dumpProcessorAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the processor as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SourceLocation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source file Location"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Index": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Processor Index"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "StepId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Step ID"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "ProcessorId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor ID"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "SupportExtendedInformation": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether this processor supports extended JMX information"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "ExpressionLanguage": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The language for the expression"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "Expression": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Expression to return the transformed message body (the new message body to use)"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "SourceLineNumber": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
          }
        },
        "desc": "Managed SetBody"
      },
      "context=SampleCamel,type=consumers,name=QuartzConsumer(0x66744aa2)": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getInflightExchanges": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "InflightExchanges"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "InflightExchanges": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Current number of inflight Exchanges"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Consumer"
      },
      "context=SampleCamel,type=processors,name=\"to1\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getIndex": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Index"
          },
          "getDestination": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Destination"
          },
          "getMessageExchangePattern": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "MessageExchangePattern"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getSourceLocation": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocation"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "extendedInformation": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Statistics of the endpoint which has been sent to"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "getSourceLineNumber": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "SourceLineNumber"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getStepId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "StepId"
          },
          "getSupportExtendedInformation": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "SupportExtendedInformation"
          },
          "getProcessorId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ProcessorId"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Processor"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Processor"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "reset": {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          "dumpProcessorAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the processor as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SourceLocation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source file Location"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "Destination": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination as Endpoint URI"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Index": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Processor Index"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "StepId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Step ID"
          },
          "MessageExchangePattern": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Message Exchange Pattern"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "ProcessorId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor ID"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "SupportExtendedInformation": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether this processor supports extended JMX information"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "SourceLineNumber": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
          }
        },
        "desc": "Managed SendProcessor"
      },
      "context=SampleCamel,type=services,name=DefaultRoutesLoader": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Service"
      },
      "context=SampleCamel,type=consumers,name=QuartzConsumer(0x17d97f83)": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getInflightExchanges": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "InflightExchanges"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "InflightExchanges": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Current number of inflight Exchanges"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Consumer"
      },
      "context=SampleCamel,type=processors,name=\"to3\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getIndex": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Index"
          },
          "getDestination": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Destination"
          },
          "getMessageExchangePattern": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "MessageExchangePattern"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getSourceLocation": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocation"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "extendedInformation": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Statistics of the endpoint which has been sent to"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "getSourceLineNumber": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "SourceLineNumber"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getStepId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "StepId"
          },
          "getSupportExtendedInformation": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "SupportExtendedInformation"
          },
          "getProcessorId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ProcessorId"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Processor"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Processor"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "reset": {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          "dumpProcessorAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the processor as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SourceLocation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source file Location"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "Destination": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination as Endpoint URI"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Index": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Processor Index"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "StepId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Step ID"
          },
          "MessageExchangePattern": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Message Exchange Pattern"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "ProcessorId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor ID"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "SupportExtendedInformation": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether this processor supports extended JMX information"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "SourceLineNumber": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
          }
        },
        "desc": "Managed SendProcessor"
      },
      "context=SampleCamel,type=services,name=DefaultShutdownStrategy": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Service"
      },
      "context=SampleCamel,type=services,name=DefaultEndpointRegistry": {
        "op": {
          "getDynamicSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "DynamicSize"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getStaticSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "StaticSize"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "purge": {
            "args": [],
            "ret": "void",
            "desc": "Purges the cache"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Size"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "getMaximumCacheSize": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "MaximumCacheSize"
          },
          "listEndpoints": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the endpoints in the registry (url)"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getSource": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Source"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Size": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of total endpoints cached"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "Source": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source"
          },
          "StaticSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of static endpoints cached"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "MaximumCacheSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Maximum cache size (capacity)"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "DynamicSize": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of dynamic endpoints cached"
          }
        },
        "desc": "Managed EndpointRegistry"
      },
      "context=SampleCamel,type=services,name=DefaultInflightRepository": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getSize": {
            "args": [],
            "ret": "int",
            "desc": "Size"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "size": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "int",
            "desc": "Current size of inflight exchanges which are from the given route."
          },
          "isInflightBrowseEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "InflightBrowseEnabled"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "browse": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "int",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "List all the exchanges that origins from the given route, which are currently inflight, limited and sorted"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "int",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "Lists all the exchanges which are currently inflight, limited and sorted"
            },
            {
              "args": [],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "Lists all the exchanges which are currently inflight"
            }
          ]
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "InflightBrowseEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether browsing inflight exchanges is enabled. This is required to be enabled for the browse operations to function."
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "Size": {
            "rw": false,
            "type": "int",
            "desc": "Current size of inflight exchanges."
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed InflightRepository"
      },
      "context=SampleCamel,type=services,name=PropertiesComponent": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getSystemPropertiesMode": {
            "args": [],
            "ret": "int",
            "desc": "SystemPropertiesMode"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "isIgnoreMissingLocation": {
            "args": [],
            "ret": "boolean",
            "desc": "IgnoreMissingLocation"
          },
          "reloadProperties": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Reload properties from the given location patterns"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "isDefaultFallbackEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "DefaultFallbackEnabled"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getEncoding": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Encoding"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getEnvironmentVariableMode": {
            "args": [],
            "ret": "int",
            "desc": "EnvironmentVariableMode"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "EnvironmentVariableMode": {
            "rw": false,
            "type": "int",
            "desc": "Environment variable mode"
          },
          "Encoding": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Encoding to use when loading properties file from the file system or classpath"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "DefaultFallbackEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether to support using fallback values if a property cannot be found"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SystemPropertiesMode": {
            "rw": false,
            "type": "int",
            "desc": "System properties mode"
          },
          "IgnoreMissingLocation": {
            "rw": false,
            "type": "boolean",
            "desc": "Ignore missing location"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          }
        },
        "desc": "Managed PropertiesComponent"
      },
      "context=SampleCamel,type=producers,name=ProducerToAsyncProducerBridge(0x578bfef1)": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Producer"
      },
      "context=SampleCamel,type=services,name=DefaultStreamCachingStrategy": {
        "op": {
          "setRemoveSpoolDirectoryWhenStopping": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "RemoveSpoolDirectoryWhenStopping"
          },
          "isRemoveSpoolDirectoryWhenStopping": {
            "args": [],
            "ret": "boolean",
            "desc": "RemoveSpoolDirectoryWhenStopping"
          },
          "getBufferSize": {
            "args": [],
            "ret": "int",
            "desc": "BufferSize"
          },
          "setSpoolUsedHeapMemoryLimit": {
            "args": [
              {
                "name": "p1",
                "type": "org.apache.camel.api.management.mbean.ManagedStreamCachingStrategyMBean$SpoolUsedHeapMemoryLimit",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "SpoolUsedHeapMemoryLimit"
          },
          "getSpoolUsedHeapMemoryThreshold": {
            "args": [],
            "ret": "int",
            "desc": "SpoolUsedHeapMemoryThreshold"
          },
          "getCacheMemoryCounter": {
            "args": [],
            "ret": "long",
            "desc": "CacheMemoryCounter"
          },
          "getCacheSpoolCounter": {
            "args": [],
            "ret": "long",
            "desc": "CacheSpoolCounter"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getCacheMemoryAverageSize": {
            "args": [],
            "ret": "long",
            "desc": "CacheMemoryAverageSize"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "setSpoolThreshold": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "SpoolThreshold"
          },
          "getSpoolThreshold": {
            "args": [],
            "ret": "long",
            "desc": "SpoolThreshold"
          },
          "getSpoolDirectory": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SpoolDirectory"
          },
          "setBufferSize": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "BufferSize"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "isAnySpoolRules": {
            "args": [],
            "ret": "boolean",
            "desc": "AnySpoolRules"
          },
          "getCacheSpoolSize": {
            "args": [],
            "ret": "long",
            "desc": "CacheSpoolSize"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Reset the utilization statistics"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getSpoolCipher": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SpoolCipher"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getCacheMemorySize": {
            "args": [],
            "ret": "long",
            "desc": "CacheMemorySize"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "getCacheSpoolAverageSize": {
            "args": [],
            "ret": "long",
            "desc": "CacheSpoolAverageSize"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "isEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "Enabled"
          },
          "setAnySpoolRules": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "AnySpoolRules"
          },
          "getSpoolUsedHeapMemoryLimit": {
            "args": [],
            "ret": "org.apache.camel.api.management.mbean.ManagedStreamCachingStrategyMBean$SpoolUsedHeapMemoryLimit",
            "desc": "SpoolUsedHeapMemoryLimit"
          },
          "isSpoolEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "SpoolEnabled"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "setSpoolUsedHeapMemoryThreshold": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "SpoolUsedHeapMemoryThreshold"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether utilization statistics is enabled"
          },
          "SpoolThreshold": {
            "rw": true,
            "type": "long",
            "desc": "Threshold in bytes when overflow and spooling to disk instead of keeping in memory"
          },
          "SpoolDirectory": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Directory used when overflow and spooling to disk"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "CacheMemorySize": {
            "rw": false,
            "type": "long",
            "desc": "Total accumulated number of bytes which has been stream cached for in-memory StreamCache"
          },
          "CacheSpoolAverageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average number of bytes per cached stream for spooled (not in-memory) stream caches."
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "SpoolCipher": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Cipher used if writing with encryption"
          },
          "RemoveSpoolDirectoryWhenStopping": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to remove spool directory when stopping"
          },
          "SpoolEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether spooling to disk enabled"
          },
          "SpoolUsedHeapMemoryLimit": {
            "rw": true,
            "type": "org.apache.camel.api.management.mbean.ManagedStreamCachingStrategyMBean$SpoolUsedHeapMemoryLimit",
            "desc": "Whether used heap memory limit is committed or maximum"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Enabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether stream caching is enabled"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "BufferSize": {
            "rw": true,
            "type": "int",
            "desc": "Buffer size in bytes to use when coping between buffers"
          },
          "SpoolUsedHeapMemoryThreshold": {
            "rw": true,
            "type": "int",
            "desc": "Percentage (1-99) of used heap memory threshold to activate spooling to disk"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CacheSpoolCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of spooled (not in-memory) StreamCache created"
          },
          "CacheMemoryAverageSize": {
            "rw": false,
            "type": "long",
            "desc": "Average number of bytes per cached stream for in-memory stream caches."
          },
          "AnySpoolRules": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether any or all spool rules determines whether to spool"
          },
          "CacheSpoolSize": {
            "rw": false,
            "type": "long",
            "desc": "Total accumulated number of bytes which has been stream cached for spooled StreamCache"
          },
          "CacheMemoryCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of in-memory StreamCache created"
          }
        },
        "desc": "Managed StreamCachingStrategy"
      },
      "context=SampleCamel,type=services,name=DefaultExchangeFactoryManager": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Reset statistics"
          },
          "getStatisticsEnabled": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "StatisticsEnabled"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "purge": {
            "args": [],
            "ret": "void",
            "desc": "Purges the pool"
          },
          "listStatistics": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the statistics in tabular form"
          },
          "getTotalCreated": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "TotalCreated"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getConsumerCounter": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "ConsumerCounter"
          },
          "getTotalPooled": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "TotalPooled"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "getTotalDiscarded": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "TotalDiscarded"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getTotalAcquired": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "TotalAcquired"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "getTotalReleased": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "TotalReleased"
          },
          "getCapacity": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Capacity"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "Whether statistics is enabled"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "TotalCreated": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "Total number of new exchanges created"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "TotalDiscarded": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "Total number of exchanges discarded (such as when capacity is full)"
          },
          "TotalAcquired": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "Total number of exchanges reused (if pooling is in use)"
          },
          "TotalPooled": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Total number of currently pooled exchanges (if pooling is in use)"
          },
          "Capacity": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Max capacity per consumer for exchange pooling"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "ConsumerCounter": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Number of consumers managed"
          },
          "TotalReleased": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "Total number of exchanges released back to the pool"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          }
        },
        "desc": "Managed ExchangeFactory"
      },
      "context=SampleCamel,type=producers,name=Producer(0x4b5e33bb)": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Producer"
      },
      "context=SampleCamel,type=routes,name=\"simple\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "dumpStepStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the route and steps stats as XML"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "getOldestInflightExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "OldestInflightExchangeId"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "dumpRouteAsXml": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the route as XML"
            },
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Dumps the route as XML"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the route as XML"
            }
          ],
          "setTracing": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Tracing"
          },
          "getTracing": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "getLastError": {
            "args": [],
            "ret": "org.apache.camel.api.management.mbean.RouteError",
            "desc": "LastError"
          },
          "getHasRouteController": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "HasRouteController"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getLoad15": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load15"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getLogMask": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogMask"
          },
          "stop": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "long",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Stop route (using timeout in seconds)"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.Long",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.Boolean",
                  "desc": ""
                }
              ],
              "ret": "boolean",
              "desc": "Stop route, abort stop after timeout (in seconds)"
            },
            {
              "args": [],
              "ret": "void",
              "desc": "Stop route"
            }
          ],
          "getRouteConfigurationId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteConfigurationId"
          },
          "reset": [
            {
              "args": [],
              "ret": "void",
              "desc": "Reset counters"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Reset counters"
            }
          ],
          "dumpRouteSourceLocationsAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the route with mappings between node ids and their source location/line-number (currently only XML and YAML routes supported) as XML"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getOldestInflightDuration": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "OldestInflightDuration"
          },
          "getUptime": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Uptime"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "getRoutePolicyList": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RoutePolicyList"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getSourceLocation": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocation"
          },
          "stopAndFail": {
            "args": [],
            "ret": "void",
            "desc": "Stop and marks the route as failed (health-check reporting as DOWN)"
          },
          "getLoad05": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load05"
          },
          "getDescription": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Description"
          },
          "remove": {
            "args": [],
            "ret": "boolean",
            "desc": "Remove route (must be stopped)"
          },
          "dumpRouteStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the route stats as XML"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getRouteProperties": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "RouteProperties"
          },
          "getUptimeMillis": {
            "args": [],
            "ret": "long",
            "desc": "UptimeMillis"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "restart": [
            {
              "args": [],
              "ret": "void",
              "desc": "Restarts route (1 second delay before starting)"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "long",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Restarts route (using delay in seconds before starting)"
            }
          ],
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start route"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getMessageHistory": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "MessageHistory"
          },
          "getSourceLocationShort": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocationShort"
          },
          "getLoad01": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load01"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "processorIds": {
            "args": [],
            "ret": "java.util.Collection",
            "desc": "IDs for the processors that are part of this route"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "getRouteGroup": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteGroup"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SourceLocation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Source Location"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Endpoint URI"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "Description": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Description"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "SourceLocationShort": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Source Location (Short)"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "Load15": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last fifteen minutes"
          },
          "RouteProperties": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "Route Properties"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "OldestInflightDuration": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "Oldest inflight exchange duration"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "UptimeMillis": {
            "rw": false,
            "type": "long",
            "desc": "Route Uptime [milliseconds]"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "HasRouteController": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Route controller"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "LogMask": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether security mask for Logging is enabled"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "Uptime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Uptime [human readable text]"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "RouteConfigurationId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Configuration ID"
          },
          "RoutePolicyList": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Policy List"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "RouteGroup": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Group"
          },
          "MessageHistory": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Message History"
          },
          "LastError": {
            "rw": false,
            "type": "org.apache.camel.api.management.mbean.RouteError",
            "desc": "Last error"
          },
          "Load05": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last five minutes"
          },
          "OldestInflightExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Oldest inflight exchange id"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "Tracing": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "Load01": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last minute"
          }
        },
        "desc": "Managed Route"
      },
      "context=SampleCamel,type=services,name=DefaultTypeConverter": {
        "op": {
          "getMissCounter": {
            "args": [],
            "ret": "long",
            "desc": "MissCounter"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getAttemptCounter": {
            "args": [],
            "ret": "long",
            "desc": "AttemptCounter"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "getTypeConverterExistsLoggingLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "TypeConverterExistsLoggingLevel"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "resetTypeConversionCounters": {
            "args": [],
            "ret": "void",
            "desc": "Resets the type conversion counters"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "hasTypeConverter": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "boolean",
            "desc": "Checks whether a type converter exists for converting (from -> to)"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getNoopCounter": {
            "args": [],
            "ret": "long",
            "desc": "NoopCounter"
          },
          "getNumberOfTypeConverters": {
            "args": [],
            "ret": "int",
            "desc": "NumberOfTypeConverters"
          },
          "getTypeConverterExists": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "TypeConverterExists"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getFailedCounter": {
            "args": [],
            "ret": "long",
            "desc": "FailedCounter"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getHitCounter": {
            "args": [],
            "ret": "long",
            "desc": "HitCounter"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Utilization statistics enabled"
          },
          "NumberOfTypeConverters": {
            "rw": false,
            "type": "int",
            "desc": "Number of type converters in the registry"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "FailedCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion failures (failed conversions)"
          },
          "TypeConverterExistsLoggingLevel": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Logging level to use if attempting to add a duplicate type converter"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "HitCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion hits (successful conversions)"
          },
          "AttemptCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion attempts"
          },
          "TypeConverterExists": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "What to do if attempting to add a duplicate type converter (Override, Ignore or Fail)"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "NoopCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of noop attempts (no type conversion was needed)"
          },
          "MissCounter": {
            "rw": false,
            "type": "long",
            "desc": "Number of type conversion misses (no suitable type converter)"
          }
        },
        "desc": "Managed TypeConverterRegistry"
      },
      "context=SampleCamel,type=services,name=DefaultRouteController": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getControlledRoutes": {
            "args": [],
            "ret": "java.util.Collection",
            "desc": "ControlledRoutes"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "getRouteStartupLoggingLevel": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteStartupLoggingLevel"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "ControlledRoutes": {
            "rw": false,
            "type": "java.util.Collection",
            "desc": "Controlled Routes"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "RouteStartupLoggingLevel": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Logging level used for logging route startup activity"
          }
        },
        "desc": "Managed RouteController"
      },
      "context=SampleCamel,type=services,name=JmxManagementStrategy": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getManagedCount": {
            "args": [],
            "ret": "int",
            "desc": "ManagedCount"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "ManagedCount": {
            "rw": false,
            "type": "int",
            "desc": "Number of managed MBean instances"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed JmxManagementStrategy"
      },
      "context=SampleCamel,type=endpoints,name=\"stream://out\"": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getEndpointBaseUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointBaseUri"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointBaseUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint Base URI (no query parameters)"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          }
        },
        "desc": "Managed Endpoint"
      },
      "context=SampleCamel,type=processors,name=\"to4\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getIndex": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Index"
          },
          "getDestination": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Destination"
          },
          "getMessageExchangePattern": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "MessageExchangePattern"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getSourceLocation": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocation"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "extendedInformation": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Statistics of the endpoint which has been sent to"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "getSourceLineNumber": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "SourceLineNumber"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getStepId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "StepId"
          },
          "getSupportExtendedInformation": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "SupportExtendedInformation"
          },
          "getProcessorId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ProcessorId"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Processor"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Processor"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "reset": {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          "dumpProcessorAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the processor as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SourceLocation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source file Location"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "Destination": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination as Endpoint URI"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Index": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Processor Index"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "StepId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Step ID"
          },
          "MessageExchangePattern": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Message Exchange Pattern"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "ProcessorId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor ID"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "SupportExtendedInformation": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether this processor supports extended JMX information"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "SourceLineNumber": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
          }
        },
        "desc": "Managed SendProcessor"
      },
      "context=SampleCamel,type=services,name=DefaultHealthCheckRegistry": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Service"
      },
      "context=SampleCamel,type=producers,name=Producer(0x5a78bfb1)": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Producer"
      },
      "context=SampleCamel,type=processors,name=\"setBody2\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getIndex": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Index"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getSourceLocation": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocation"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "getSourceLineNumber": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "SourceLineNumber"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getStepId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "StepId"
          },
          "getSupportExtendedInformation": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "SupportExtendedInformation"
          },
          "getProcessorId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ProcessorId"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Processor"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getExpression": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Expression"
          },
          "getExpressionLanguage": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ExpressionLanguage"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Processor"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "reset": {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          "dumpProcessorAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the processor as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SourceLocation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source file Location"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Index": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Processor Index"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "StepId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Step ID"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "ProcessorId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor ID"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "SupportExtendedInformation": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether this processor supports extended JMX information"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "ExpressionLanguage": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "The language for the expression"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "Expression": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Expression to return the transformed message body (the new message body to use)"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "SourceLineNumber": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
          }
        },
        "desc": "Managed SetBody"
      },
      "context=SampleCamel,type=services,name=DefaultMessageHistoryFactory": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "isCopyMessage": {
            "args": [],
            "ret": "boolean",
            "desc": "CopyMessage"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getNodePattern": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "NodePattern"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "setNodePattern": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "NodePattern"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "isEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "Enabled"
          },
          "setCopyMessage": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "CopyMessage"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "NodePattern": {
            "rw": true,
            "type": "java.lang.String",
            "desc": "Pattern to filter EIPs"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "CopyMessage": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether a copy of the message is included in the message history"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "Enabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether message history is enabled"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed MessageHistoryFactory"
      },
      "context=SampleCamel,type=services,name=DefaultExecutorServiceManager": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Service"
      },
      "context=SampleCamel,type=services,name=DefaultAsyncProcessorAwaitManager": {
        "op": {
          "getMeanDuration": {
            "args": [],
            "ret": "long",
            "desc": "MeanDuration"
          },
          "getMinDuration": {
            "args": [],
            "ret": "long",
            "desc": "MinDuration"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "setInterruptThreadsWhileStopping": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "InterruptThreadsWhileStopping"
          },
          "interrupt": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "To interrupt an exchange which may seem as stuck, to force the exchange to continue, allowing any blocking thread to be released."
          },
          "getThreadsInterrupted": {
            "args": [],
            "ret": "long",
            "desc": "ThreadsInterrupted"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "isInterruptThreadsWhileStopping": {
            "args": [],
            "ret": "boolean",
            "desc": "InterruptThreadsWhileStopping"
          },
          "getMaxDuration": {
            "args": [],
            "ret": "long",
            "desc": "MaxDuration"
          },
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "resetStatistics": {
            "args": [],
            "ret": "void",
            "desc": "Resets the statistics"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getSize": {
            "args": [],
            "ret": "int",
            "desc": "Size"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "getTotalDuration": {
            "args": [],
            "ret": "long",
            "desc": "TotalDuration"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getThreadsBlocked": {
            "args": [],
            "ret": "long",
            "desc": "ThreadsBlocked"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "browse": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Lists all the exchanges which are currently inflight, having a blocked thread awaiting for other threads to trigger the callback when they are done"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Utilization statistics enabled"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Size": {
            "rw": false,
            "type": "int",
            "desc": "Number of threads that are blocked waiting for other threads to trigger the callback when they are done processing the exchange"
          },
          "ThreadsInterrupted": {
            "rw": false,
            "type": "long",
            "desc": "Number of threads that has been interrupted"
          },
          "MaxDuration": {
            "rw": false,
            "type": "long",
            "desc": "The maximum wait time in msec."
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "MinDuration": {
            "rw": false,
            "type": "long",
            "desc": "The minimum wait time in msec."
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          },
          "TotalDuration": {
            "rw": false,
            "type": "long",
            "desc": "Total wait time in msec."
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "MeanDuration": {
            "rw": false,
            "type": "long",
            "desc": "The average wait time in msec."
          },
          "InterruptThreadsWhileStopping": {
            "rw": true,
            "type": "boolean",
            "desc": "Whether to interrupt any blocking threads during stopping."
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "ThreadsBlocked": {
            "rw": false,
            "type": "long",
            "desc": "Number of threads that has been blocked"
          }
        },
        "desc": "Managed AsyncProcessorAwaitManager"
      },
      "context=SampleCamel,type=producers,name=ProducerToAsyncProducerBridge(0x28cb874d)": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed Producer"
      },
      "context=SampleCamel,type=endpoints,name=\"quartz://cron\\?cron=0%2F10+\\*+\\*+\\*+\\*+%3F\"": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getEndpointBaseUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointBaseUri"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointBaseUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint Base URI (no query parameters)"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          }
        },
        "desc": "Managed Endpoint"
      },
      "context=SampleCamel,type=components,name=\"spring-event\"": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getComponentName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ComponentName"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "isVerifySupported": {
            "args": [],
            "ret": "boolean",
            "desc": "VerifySupported"
          },
          "verify": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.util.Map",
                "desc": ""
              }
            ],
            "ret": "org.apache.camel.api.management.mbean.ComponentVerifierExtension$Result",
            "desc": "Verify options against a given scope"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "VerifySupported": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this component support verification (parameters or connectivity)"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ComponentName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Component Name"
          }
        },
        "desc": "Managed Component"
      },
      "context=SampleCamel,type=processors,name=\"to2\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "getIndex": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "Index"
          },
          "getDestination": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Destination"
          },
          "getMessageExchangePattern": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "MessageExchangePattern"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getSourceLocation": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocation"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "extendedInformation": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Statistics of the endpoint which has been sent to"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "getSourceLineNumber": {
            "args": [],
            "ret": "java.lang.Integer",
            "desc": "SourceLineNumber"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getStepId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "StepId"
          },
          "getSupportExtendedInformation": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "SupportExtendedInformation"
          },
          "getProcessorId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ProcessorId"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Processor"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Processor"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "reset": {
            "args": [],
            "ret": "void",
            "desc": "Reset counters"
          },
          "dumpProcessorAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the processor as XML"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SourceLocation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Source file Location"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "Destination": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Destination as Endpoint URI"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "Index": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Processor Index"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "StepId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Step ID"
          },
          "MessageExchangePattern": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Message Exchange Pattern"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "ProcessorId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor ID"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "SupportExtendedInformation": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether this processor supports extended JMX information"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Processor State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "SourceLineNumber": {
            "rw": false,
            "type": "java.lang.Integer",
            "desc": "Line number of this node in the source file (when loaded from a line number aware parser)"
          }
        },
        "desc": "Managed SendProcessor"
      },
      "context=SampleCamel,type=services,name=DefaultReactiveExecutor": {
        "op": {
          "suspend": {
            "args": [],
            "ret": "void",
            "desc": "Suspend Service"
          },
          "resume": {
            "args": [],
            "ret": "void",
            "desc": "Resume Service"
          },
          "isSuspended": {
            "args": [],
            "ret": "boolean",
            "desc": "Suspended"
          },
          "getPendingTasks": {
            "args": [],
            "ret": "int",
            "desc": "PendingTasks"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start Service"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "isSupportSuspension": {
            "args": [],
            "ret": "boolean",
            "desc": "SupportSuspension"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getCreatedWorkers": {
            "args": [],
            "ret": "int",
            "desc": "CreatedWorkers"
          },
          "stop": {
            "args": [],
            "ret": "void",
            "desc": "Stop Service"
          },
          "getRunningWorkers": {
            "args": [],
            "ret": "int",
            "desc": "RunningWorkers"
          },
          "isStaticService": {
            "args": [],
            "ret": "boolean",
            "desc": "StaticService"
          },
          "getServiceType": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "ServiceType"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "StatisticsEnabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether statistics is enabled"
          },
          "RunningWorkers": {
            "rw": false,
            "type": "int",
            "desc": "Number of running workers"
          },
          "CreatedWorkers": {
            "rw": false,
            "type": "int",
            "desc": "Number of created workers"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "ServiceType": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Service Type"
          },
          "PendingTasks": {
            "rw": false,
            "type": "int",
            "desc": "Number of pending tasks"
          },
          "SupportSuspension": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service supports suspension"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "Suspended": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is suspended"
          },
          "StaticService": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether this service is static"
          }
        },
        "desc": "Managed ReactiveExecutor"
      },
      "context=SampleCamel,type=endpoints,name=\"quartz://simple\\?trigger.repeatInterval=10000\"": {
        "op": {
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getEndpointBaseUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointBaseUri"
          },
          "isSingleton": {
            "args": [],
            "ret": "boolean",
            "desc": "Singleton"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint URI"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "EndpointBaseUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint Base URI (no query parameters)"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Endpoint State"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "Singleton": {
            "rw": false,
            "type": "boolean",
            "desc": "Singleton"
          }
        },
        "desc": "Managed Endpoint"
      },
      "context=SampleCamel,type=routes,name=\"cron\"": {
        "op": {
          "getExchangesCompleted": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesCompleted"
          },
          "getLastProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "LastProcessingTime"
          },
          "getDeltaProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "DeltaProcessingTime"
          },
          "dumpStepStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the route and steps stats as XML"
          },
          "getStartTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "StartTimestamp"
          },
          "getOldestInflightExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "OldestInflightExchangeId"
          },
          "dumpStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the statistics as XML"
          },
          "getLastExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeFailureTimestamp"
          },
          "dumpRouteAsXml": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the route as XML"
            },
            {
              "args": [],
              "ret": "java.lang.String",
              "desc": "Dumps the route as XML"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "java.lang.String",
              "desc": "Dumps the route as XML"
            }
          ],
          "setTracing": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.Boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Tracing"
          },
          "getTracing": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "getLastError": {
            "args": [],
            "ret": "org.apache.camel.api.management.mbean.RouteError",
            "desc": "LastError"
          },
          "getHasRouteController": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "HasRouteController"
          },
          "getMinProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MinProcessingTime"
          },
          "getLoad15": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load15"
          },
          "getCamelManagementName": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelManagementName"
          },
          "getExchangesTotal": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesTotal"
          },
          "getCamelId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "CamelId"
          },
          "getLogMask": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "LogMask"
          },
          "stop": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "long",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Stop route (using timeout in seconds)"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.Long",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.Boolean",
                  "desc": ""
                }
              ],
              "ret": "boolean",
              "desc": "Stop route, abort stop after timeout (in seconds)"
            },
            {
              "args": [],
              "ret": "void",
              "desc": "Stop route"
            }
          ],
          "getRouteConfigurationId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteConfigurationId"
          },
          "reset": [
            {
              "args": [],
              "ret": "void",
              "desc": "Reset counters"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "boolean",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Reset counters"
            }
          ],
          "dumpRouteSourceLocationsAsXml": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Dumps the route with mappings between node ids and their source location/line-number (currently only XML and YAML routes supported) as XML"
          },
          "getFirstExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeCompletedExchangeId"
          },
          "getLastExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "LastExchangeCompletedTimestamp"
          },
          "getOldestInflightDuration": {
            "args": [],
            "ret": "java.lang.Long",
            "desc": "OldestInflightDuration"
          },
          "getUptime": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Uptime"
          },
          "getEndpointUri": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "EndpointUri"
          },
          "getRoutePolicyList": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RoutePolicyList"
          },
          "getTotalProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "TotalProcessingTime"
          },
          "getSourceLocation": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocation"
          },
          "stopAndFail": {
            "args": [],
            "ret": "void",
            "desc": "Stop and marks the route as failed (health-check reporting as DOWN)"
          },
          "getLoad05": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load05"
          },
          "getDescription": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Description"
          },
          "remove": {
            "args": [],
            "ret": "boolean",
            "desc": "Remove route (must be stopped)"
          },
          "dumpRouteStatsAsXml": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Dumps the route stats as XML"
          },
          "getFirstExchangeCompletedTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeCompletedTimestamp"
          },
          "getLastExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeFailureExchangeId"
          },
          "getMaxProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MaxProcessingTime"
          },
          "getLastExchangeCompletedExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "LastExchangeCompletedExchangeId"
          },
          "setStatisticsEnabled": {
            "args": [
              {
                "name": "p1",
                "type": "boolean",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "StatisticsEnabled"
          },
          "getRouteProperties": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "RouteProperties"
          },
          "getUptimeMillis": {
            "args": [],
            "ret": "long",
            "desc": "UptimeMillis"
          },
          "getMeanProcessingTime": {
            "args": [],
            "ret": "long",
            "desc": "MeanProcessingTime"
          },
          "restart": [
            {
              "args": [],
              "ret": "void",
              "desc": "Restarts route (1 second delay before starting)"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "long",
                  "desc": ""
                }
              ],
              "ret": "void",
              "desc": "Restarts route (using delay in seconds before starting)"
            }
          ],
          "getExternalRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "ExternalRedeliveries"
          },
          "start": {
            "args": [],
            "ret": "void",
            "desc": "Start route"
          },
          "getFirstExchangeFailureExchangeId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "FirstExchangeFailureExchangeId"
          },
          "getResetTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "ResetTimestamp"
          },
          "getExchangesFailed": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesFailed"
          },
          "getRouteId": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteId"
          },
          "getMessageHistory": {
            "args": [],
            "ret": "java.lang.Boolean",
            "desc": "MessageHistory"
          },
          "getSourceLocationShort": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "SourceLocationShort"
          },
          "getLoad01": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Load01"
          },
          "getState": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "State"
          },
          "getFailuresHandled": {
            "args": [],
            "ret": "long",
            "desc": "FailuresHandled"
          },
          "processorIds": {
            "args": [],
            "ret": "java.util.Collection",
            "desc": "IDs for the processors that are part of this route"
          },
          "getExchangesInflight": {
            "args": [],
            "ret": "long",
            "desc": "ExchangesInflight"
          },
          "getRouteGroup": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "RouteGroup"
          },
          "getRedeliveries": {
            "args": [],
            "ret": "long",
            "desc": "Redeliveries"
          },
          "isStatisticsEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "StatisticsEnabled"
          },
          "getFirstExchangeFailureTimestamp": {
            "args": [],
            "ret": "java.util.Date",
            "desc": "FirstExchangeFailureTimestamp"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "SourceLocation": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Source Location"
          },
          "StatisticsEnabled": {
            "rw": true,
            "type": "boolean",
            "desc": "Statistics enabled"
          },
          "EndpointUri": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Endpoint URI"
          },
          "CamelManagementName": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ManagementName"
          },
          "ExchangesCompleted": {
            "rw": false,
            "type": "long",
            "desc": "Number of completed exchanges"
          },
          "LastProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Last Processing Time [milliseconds]"
          },
          "ExchangesFailed": {
            "rw": false,
            "type": "long",
            "desc": "Number of failed exchanges"
          },
          "Description": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Description"
          },
          "FirstExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Completed ExchangeId"
          },
          "StartTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was initially started"
          },
          "FirstExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Completed Timestamp"
          },
          "SourceLocationShort": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Source Location (Short)"
          },
          "LastExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Failed Timestamp"
          },
          "MaxProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Max Processing Time [milliseconds]"
          },
          "LastExchangeCompletedTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Last Exchange Completed Timestamp"
          },
          "Load15": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last fifteen minutes"
          },
          "RouteProperties": {
            "rw": false,
            "type": "javax.management.openmbean.TabularData",
            "desc": "Route Properties"
          },
          "DeltaProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Delta Processing Time [milliseconds]"
          },
          "OldestInflightDuration": {
            "rw": false,
            "type": "java.lang.Long",
            "desc": "Oldest inflight exchange duration"
          },
          "ExternalRedeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of external initiated redeliveries (such as from JMS broker)"
          },
          "UptimeMillis": {
            "rw": false,
            "type": "long",
            "desc": "Route Uptime [milliseconds]"
          },
          "ExchangesTotal": {
            "rw": false,
            "type": "long",
            "desc": "Total number of exchanges"
          },
          "ResetTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "Timestamp when the stats was last reset or initially started"
          },
          "ExchangesInflight": {
            "rw": false,
            "type": "long",
            "desc": "Number of inflight exchanges"
          },
          "MeanProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Mean Processing Time [milliseconds]"
          },
          "HasRouteController": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Route controller"
          },
          "LastExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Failed ExchangeId"
          },
          "LogMask": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Whether security mask for Logging is enabled"
          },
          "FirstExchangeFailureExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "First Exchange Failed ExchangeId"
          },
          "Uptime": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Uptime [human readable text]"
          },
          "CamelId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Camel ID"
          },
          "TotalProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Total Processing Time [milliseconds]"
          },
          "FirstExchangeFailureTimestamp": {
            "rw": false,
            "type": "java.util.Date",
            "desc": "First Exchange Failed Timestamp"
          },
          "RouteId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route ID"
          },
          "RouteConfigurationId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Configuration ID"
          },
          "RoutePolicyList": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Policy List"
          },
          "FailuresHandled": {
            "rw": false,
            "type": "long",
            "desc": "Number of failures handled"
          },
          "RouteGroup": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route Group"
          },
          "MessageHistory": {
            "rw": false,
            "type": "java.lang.Boolean",
            "desc": "Message History"
          },
          "LastError": {
            "rw": false,
            "type": "org.apache.camel.api.management.mbean.RouteError",
            "desc": "Last error"
          },
          "Load05": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last five minutes"
          },
          "OldestInflightExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Oldest inflight exchange id"
          },
          "State": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Route State"
          },
          "Redeliveries": {
            "rw": false,
            "type": "long",
            "desc": "Number of redeliveries (internal only)"
          },
          "MinProcessingTime": {
            "rw": false,
            "type": "long",
            "desc": "Min Processing Time [milliseconds]"
          },
          "LastExchangeCompletedExchangeId": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Last Exchange Completed ExchangeId"
          },
          "Tracing": {
            "rw": true,
            "type": "java.lang.Boolean",
            "desc": "Tracing"
          },
          "Load01": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Average load over the last minute"
          }
        },
        "desc": "Managed Route"
      },
      "context=SampleCamel,type=health,name=DefaultHealthCheck": {
        "op": {
          "isHealthyLiveness": {
            "args": [],
            "ret": "boolean",
            "desc": "HealthyLiveness"
          },
          "enableById": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Enables an Health Check by ID"
          },
          "isEnabled": {
            "args": [],
            "ret": "boolean",
            "desc": "Enabled"
          },
          "disableById": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Disables an Health Check by ID"
          },
          "invoke": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Invoke an Health Check by ID"
          },
          "details": {
            "args": [],
            "ret": "javax.management.openmbean.TabularData",
            "desc": "Registered Health Checks Details"
          },
          "getHealthChecksIDs": {
            "args": [],
            "ret": "java.util.Collection",
            "desc": "HealthChecksIDs"
          },
          "isHealthy": {
            "args": [],
            "ret": "boolean",
            "desc": "Healthy"
          },
          "isHealthyReadiness": {
            "args": [],
            "ret": "boolean",
            "desc": "HealthyReadiness"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "HealthyLiveness": {
            "rw": false,
            "type": "boolean",
            "desc": "Application Health (only liveness checks)"
          },
          "HealthChecksIDs": {
            "rw": false,
            "type": "java.util.Collection",
            "desc": "Registered Health Checks IDs"
          },
          "Enabled": {
            "rw": false,
            "type": "boolean",
            "desc": "Whether Health Check is enabled globally"
          },
          "Healthy": {
            "rw": false,
            "type": "boolean",
            "desc": "Application Health (all checks)"
          },
          "HealthyReadiness": {
            "rw": false,
            "type": "boolean",
            "desc": "Application Health (only readiness checks)"
          }
        },
        "desc": ""
      }
    },
    "jmx4perl": {
      "type=Config": {
        "op": {
          "setHistoryEntriesForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetDebugInfo": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetHistoryEntries": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryEntriesForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "debugInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "HistorySize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "MaxDebugEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "HistoryMaxEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "Debug": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "io.hawt.config": {
      "name=configFacade,type=ConfigFacade": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "Version": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Attribute exposed for management"
          },
          "ConfigDir": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "io.hawt.log.logback": {
      "name=logbackLogQuery,type=LogbackLogQuery": {
        "op": {
          "logResultsSince": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getJavaDoc": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "getSource": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "logMessage": {
            "args": [
              {
                "name": "p1",
                "type": "ch.qos.logback.classic.spi.LoggingEvent",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "queryLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "io.hawt.log.LogFilter",
                "desc": ""
              }
            ],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "allLogResults": {
            "args": [],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getLogEvents": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "reconnectAppender": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "jsonQueryLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "filterLogEvents": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Size": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "hawtio": {
      "type=Registry": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "UpdateCounter": {
            "rw": false,
            "type": "long",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=security,name=RBACRegistry": {
        "op": {
          "list": {
            "args": [],
            "ret": "java.util.Map",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "Information on the management interface of the MBean"
      },
      "type=About": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "HawtioVersion": {
            "rw": false,
            "type": "java.lang.String",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=security,area=jmx,rank=0,name=HawtioDummyJMXSecurity": {
        "op": {
          "canInvoke": [
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "boolean",
              "desc": "Operation exposed for management"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.util.Map",
                  "desc": ""
                }
              ],
              "ret": "javax.management.openmbean.TabularData",
              "desc": "Operation exposed for management"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p3",
                  "type": "[Ljava.lang.String;",
                  "desc": ""
                }
              ],
              "ret": "boolean",
              "desc": "Operation exposed for management"
            },
            {
              "args": [
                {
                  "name": "p1",
                  "type": "java.lang.String",
                  "desc": ""
                },
                {
                  "name": "p2",
                  "type": "java.lang.String",
                  "desc": ""
                }
              ],
              "ret": "boolean",
              "desc": "Operation exposed for management"
            }
          ]
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "Information on the management interface of the MBean"
      },
      "type=QuartzFacade": {
        "op": {
          "updateCronTrigger": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "updateSimpleTrigger": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "Information on the management interface of the MBean"
      },
      "type=TreeWatcher": {
        "op": {},
        "not": {},
        "canInvoke": true,
        "attr": {
          "Counter": {
            "rw": false,
            "type": "long",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      },
      "type=LogQuery": {
        "op": {
          "logResultsSince": {
            "args": [
              {
                "name": "p1",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getJavaDoc": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "getSource": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "logMessage": {
            "args": [
              {
                "name": "p1",
                "type": "ch.qos.logback.classic.spi.LoggingEvent",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "queryLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "io.hawt.log.LogFilter",
                "desc": ""
              }
            ],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "allLogResults": {
            "args": [],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getLogEvents": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          },
          "reconnectAppender": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "jsonQueryLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "getLogResults": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "io.hawt.log.LogResults",
            "desc": "Operation exposed for management"
          },
          "filterLogEvents": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              }
            ],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "Size": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    },
    "jolokia": {
      "type=Discovery": {
        "op": {
          "lookupAgentsWithTimeout": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          },
          "lookupAgentsWithTimeoutAndMulticastAddress": {
            "args": [
              {
                "name": "p1",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          },
          "lookupAgents": {
            "args": [],
            "ret": "java.util.List",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "Information on the management interface of the MBean"
      },
      "type=ServerHandler": {
        "op": {
          "mBeanServersInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {},
        "desc": "Information on the management interface of the MBean"
      },
      "type=Config": {
        "op": {
          "setHistoryEntriesForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForOperation": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetDebugInfo": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "resetHistoryEntries": {
            "args": [],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryEntriesForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "setHistoryLimitForAttribute": {
            "args": [
              {
                "name": "p1",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p2",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p3",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p4",
                "type": "java.lang.String",
                "desc": ""
              },
              {
                "name": "p5",
                "type": "int",
                "desc": ""
              },
              {
                "name": "p6",
                "type": "long",
                "desc": ""
              }
            ],
            "ret": "void",
            "desc": "Operation exposed for management"
          },
          "debugInfo": {
            "args": [],
            "ret": "java.lang.String",
            "desc": "Operation exposed for management"
          }
        },
        "not": {},
        "canInvoke": true,
        "attr": {
          "HistorySize": {
            "rw": false,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "MaxDebugEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "HistoryMaxEntries": {
            "rw": true,
            "type": "int",
            "desc": "Attribute exposed for management"
          },
          "Debug": {
            "rw": true,
            "type": "boolean",
            "desc": "Attribute exposed for management"
          }
        },
        "desc": "Information on the management interface of the MBean"
      }
    }
  }
}
