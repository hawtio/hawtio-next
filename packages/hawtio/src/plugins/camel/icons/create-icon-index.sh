#!/bin/bash

INDEX=index.ts
COMP="components"
END="endpoints"

function export_index() {
  local loc=${1}

  if [ -f ${loc}/${INDEX} ]; then
    rm -f ${loc}/${INDEX}
  fi

  echo "// === THIS FILE WAS AUTO-GENERATED BY create-icon-index.sh ===" >> ${loc}/${INDEX}
  for i in ${loc}/*.tsx;
  do
    fname=$(basename ${i} .tsx)
    echo "export { ${fname} } from './${fname}'" >> ${loc}/${INDEX}
  done
}

function populate_map() {
  local loc=${1}
  local al=${2}

  for i in ${loc}/*.tsx;
  do
    fname=$(basename ${i} .tsx)
    echo "componentMap.set('${fname}', ${al}.${fname})" >> ${INDEX}
  done
}

#
# Create the icon directory indexes
#
export_index "${COMP}"
export_index "${COMP}/${END}"

echo > ${INDEX}
echo "// === THIS FILE WAS AUTO-GENERATED BY create-icon-index.sh ==="  >> ${INDEX}
echo "import React from 'react'" >> ${INDEX}

#
# Add the list of imports so we can populate the component Map
#
echo "import * as compIcons from './components'" >> ${INDEX}
echo "import * as endpointIcons from './components/endpoints'" >> ${INDEX}
echo >> ${INDEX}

#
# Export all the icons so they can be used by name if required
#
echo "export * from './components'" >> ${INDEX}
echo "export * from './components/endpoints'" >> ${INDEX}
echo >> ${INDEX}

echo "const componentMap: Map<string, React.FunctionComponent> = new Map<string, React.FunctionComponent>()" >> ${INDEX}
echo >> ${INDEX}

#
# Populate the component map
#
populate_map "${COMP}" "compIcons"
populate_map "${COMP}/${END}" "endpointIcons"

echo >> ${INDEX}
echo "export function getIconComponent(componentName: string): React.FunctionComponent {" >> ${INDEX}
echo "  const component: React.FunctionComponent | undefined = componentMap.get(componentName)" >> ${INDEX}
echo "  if (component) {" >> ${INDEX}
echo "    return component as React.FunctionComponent" >> ${INDEX}
echo "  }" >> ${INDEX}
echo >> ${INDEX}
echo "  return compIcons.GenericIcon" >> ${INDEX}
echo "}" >> ${INDEX}
